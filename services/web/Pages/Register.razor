@page "/register"
@inject NavigationManager NavigationManager
@using StateManagement
@using web.Data
@inject JwtState JwtState
@inject AuthService authService
@using Grpc.Core

<div class="row">
    <div class="col-sm-9 col-md-7 col-lg-5 mx-auto">
    <div class="card card-signin my-5">
        <div class="card-body">
        <h5 class="card-title text-center">Register</h5>
        <EditForm Model=@user OnValidSubmit=@ValidFormSubmitted>
            <div class="form-signin">
            <div class="form-label-group">
            <InputText type="email" id="inputEmail" class="form-control" placeholder="Email address" required autofocus 
                @bind-Value=@user.Email/>
            <label for="inputEmail">Email address</label>
            </div>

            <div class="form-label-group">
            <InputText type="name" id="inputName" class="form-control" placeholder="Full Name" required autofocus 
                @bind-Value=@user.FullName />
            <label for="inputName">Full Name</label>
            </div>

            <div class="form-label-group">
            <InputText type="password" id="inputPassword" class="form-control" placeholder="Password" required 
                @bind-Value=@user.Password/>
            <label for="inputPassword">Password</label>
            </div>

            <button class="btn btn-lg btn-primary btn-block text-uppercase" type="submit">Register</button>
            </div>
        </EditForm>
        </div>
    </div>
    </div>
</div>

<div class="modal @errorModal.ModalClass" tabindex="-1" role="dialog" style="display:@errorModal.ModalDisplay">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    @if(errorModal.exception != null) {
                        @errorModal.exception.Status.StatusCode.ToString()
                    }
                </h5>
                <button type="button" class="ModalClose" data-dismiss="modal" aria-label="ModalClose">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>
                    @if(errorModal.exception != null) {
                        @errorModal.exception.Status.Detail
                    }
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => ErrorModalClose()">ModalClose</button>
            </div>
        </div>
    </div>
</div>


@code {
    User user = new User();
    ErrorModal errorModal = new ErrorModal();
    protected override void OnInitialized() {
        if(!string.IsNullOrEmpty(JwtState.Jwt))
            NavigationManager.NavigateTo("");
    }
    void ValidFormSubmitted() {
        try{
            authService.Register(user);
            NavigationManager.NavigateTo("login");
        } catch (RpcException e) {
            ErrorModalOpen(e);
        } catch(Exception e) {
            ErrorModalOpen(new RpcException(new Status(StatusCode.Internal, e.Message), ""));
        }
        
    }
    public void ErrorModalClose() {
        errorModal.Close();
        StateHasChanged();
    }
    public void ErrorModalOpen(RpcException e) {
        errorModal.Open(e);
        StateHasChanged();
    }
}